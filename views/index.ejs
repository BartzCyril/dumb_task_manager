<%- include('components/header.ejs') %>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="text-center mb-4">
                <h1>To-Do List</h1>
                <p class="text-muted">
                    Organize your tasks! <strong>Log in</strong> to save your tasks permanently. <br>
                    If you're not logged in, your tasks will be saved temporarily in your browser's <strong>Local
                        Storage</strong>.
                    Note: Local Storage keeps data only on this device. If you clear your browser or switch devices,
                    your tasks will be lost.
                </p>
            </div>

            <div class="text-center mb-4">
                <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addTaskModal">Add a Task
                </button>
            </div>

            <ul class="list-group" id="todo-list"></ul>
        </div>
    </div>
</div>

<div class="modal fade" id="addTaskModal" tabindex="-1" aria-labelledby="addTaskModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addTaskModalLabel">Add a New Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="add-task-form">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="task-title" class="form-label">Task Name</label>
                        <input type="text" id="task-title" class="form-control" placeholder="Enter task name" required>
                    </div>
                    <div class="mb-3">
                        <label for="task-description" class="form-label">Description</label>
                        <textarea id="task-description" class="form-control"
                                  placeholder="Enter task description"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Task</button>
                </div>
            </form>
        </div>
    </div>
</div>

<%- include('components/footer.ejs') %>

<script type="module">
    import {closeModal, editTodo, renderTodos, saveTodosLocally, getTodosLocally, saveTodoToServer, updateTodoOnServer, deleteTodoFromServer} from "/js/todos.js";

    document.addEventListener('DOMContentLoaded', () => {
        const addTaskForm = document.getElementById('add-task-form');
        let todos = [];
        let editIndex = null;

        const isLogged = <%- session.isLogged %>

        if (isLogged) {
            todos = <%- JSON.stringify(todos) %>
            renderTodos(todos)

            window.deleteTodo = (index) => {
                const todoToDelete = todos[index];
                if (todoToDelete) {
                    deleteTodoFromServer(todoToDelete.id);
                }
            };

            window.toggleTodoCompleted = (index) => {
                const todo = todos[index];
                if (todo) {
                    todo.completed = !todo.completed;
                    updateTodoOnServer(todo);
                }
            };

            window.editTodo = (index) => {
                editIndex = editTodo(editIndex, index, todos);
            };
        } else {
            todos = getTodosLocally();
            renderTodos(todos);

            window.deleteTodo = (index) => {
                todos.splice(index, 1);
                saveTodosLocally(todos);
                renderTodos(todos);
            };

            window.toggleTodoCompleted = (index) => {
                todos[index].completed = !todos[index].completed;
                saveTodosLocally(todos);
                renderTodos(todos);
            };

            window.editTodo = (index) => {
                editIndex = editTodo(editIndex, index, todos);
            };
        }

        addTaskForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const title = document.getElementById('task-title').value.trim();
            const description = document.getElementById('task-description').value.trim();

            if (title) {
                const newTodo = {title, description, completed: false};

                if (editIndex !== null) {
                    todos[editIndex] = {...todos[editIndex], title, description};
                    if (isLogged) {
                        updateTodoOnServer(todos[editIndex]);
                    }
                    editIndex = null;
                } else {
                    todos.push(newTodo);
                    if (isLogged) {
                        saveTodoToServer(newTodo);
                    }
                }

                if (!isLogged) {
                    saveTodosLocally(todos);
                }

                renderTodos(todos);
                addTaskForm.reset();
                closeModal();
            }
        });
    });
</script>
